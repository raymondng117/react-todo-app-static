{"ast":null,"code":"var _jsxFileName = \"D:\\\\Canada\\\\Algonquin\\\\Projects\\\\react-app\\\\LiveWebsite\\\\ToDoApp\\\\Github\\\\react-todo-app\\\\src\\\\Components\\\\LoginPage\\\\LogIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//import { GetUser } from '../../JS/GetUser';\nimport '../../CSS/loginsigup.css'; // Import your CSS file for styling\nimport Navbar from '../Navbar/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    apiURL\n  } = _ref;\n  const [useremail, setUserEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMsg, setErrorMsg] = useState('');\n  const navigate = useNavigate(); // Move useNavigate hook call outside of the conditional logic\n\n  const URL = apiURL;\n  async function GetUser(useremail, password) {\n    let errorMsg;\n    try {\n      const response = await fetch(`${URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          useremail,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.authenticated) {\n          console.log(data.user);\n          sessionStorage.setItem('signedInUser', JSON.stringify(data.user));\n        } else {\n          errorMsg = 'Invalid email or password';\n        }\n      } else {\n        errorMsg = response.statusText;\n      }\n    } catch (error) {\n      errorMsg = error;\n    }\n    return errorMsg;\n  }\n  const handleLogin = async e => {\n    e.preventDefault();\n    const loginErrMsg = await GetUser(useremail, password); // Retrieve error message from GetLoginData\n    setErrorMsg(loginErrMsg); // Set error message state\n\n    if (!loginErrMsg) {\n      navigate('/todopage');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"useremail\",\n            children: \"User email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"useremail\",\n            className: \"form-control\",\n            value: useremail,\n            onChange: e => setUserEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-white fw-bold\",\n        children: [\"Click \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"fw-bold\",\n          to: \"/signup\",\n          children: \"sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }, this), \" if you don't have an account.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), errMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-danger fw-bold\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"tK9Nw94LinW4eYjeBGc8NMBCdes=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Navbar","useNavigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_ref","_s","apiURL","useremail","setUserEmail","password","setPassword","errMsg","setErrorMsg","navigate","URL","GetUser","errorMsg","response","fetch","method","headers","body","JSON","stringify","ok","data","json","authenticated","console","log","user","sessionStorage","setItem","statusText","error","handleLogin","e","preventDefault","loginErrMsg","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","to","_c","$RefreshReg$"],"sources":["D:/Canada/Algonquin/Projects/react-app/LiveWebsite/ToDoApp/Github/react-todo-app/src/Components/LoginPage/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\n//import { GetUser } from '../../JS/GetUser';\r\nimport '../../CSS/loginsigup.css'; // Import your CSS file for styling\r\nimport Navbar from '../Navbar/Navbar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Login = ({ apiURL }) => {\r\n    const [useremail, setUserEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errMsg, setErrorMsg] = useState('');\r\n    const navigate = useNavigate(); // Move useNavigate hook call outside of the conditional logic\r\n\r\n    const URL = apiURL;\r\n\r\n    async function GetUser(useremail, password) {\r\n        let errorMsg;\r\n\r\n        try {\r\n            const response = await fetch(`${URL}/login`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ useremail, password }),\r\n            })\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                if (data.authenticated) {\r\n                    console.log(data.user);\r\n                    sessionStorage.setItem('signedInUser', JSON.stringify(data.user));\r\n                } else {\r\n                    errorMsg = 'Invalid email or password';\r\n                }\r\n            } else {\r\n                errorMsg = response.statusText;\r\n            }\r\n        } catch (error) {\r\n            errorMsg = error;\r\n        }\r\n\r\n        return errorMsg;\r\n    }\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const loginErrMsg = await GetUser(useremail, password); // Retrieve error message from GetLoginData\r\n        setErrorMsg(loginErrMsg); // Set error message state\r\n\r\n        if (!loginErrMsg) {\r\n            navigate('/todopage');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"login-container mt-5\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"useremail\">User email:</label>\r\n                        <input type=\"text\" id=\"useremail\" className='form-control' value={useremail} onChange={(e) => setUserEmail(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id=\"password\" className='form-control' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    </div>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n                <div className='mt-4 text-white fw-bold'>\r\n                    Click <Link className=\"fw-bold\" to=\"/signup\">sign up</Link> if you don't have an account.\r\n                </div>\r\n                {errMsg && <div className='mt-4 text-danger fw-bold'>{errMsg}</div>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}