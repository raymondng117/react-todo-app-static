{"ast":null,"code":"export async function GetToDoItems(userId, listname) {\n  const localApiURL = \"http://localhost:8080\";\n  const apiURL = \"https://national-united-gobbler.ngrok-free.app\";\n  if (listname) {\n    try {\n      let items = {\n        toDo: [],\n        doing: [],\n        done: []\n      };\n      const response = await fetch(`${apiURL}/todoitem/${userId}/${listname}`, {\n        method: \"GET\",\n        headers: {\n          'ngrok-skip-browser-warning': 'true'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        data.forEach(item => {\n          if (item.status == 'todo') {\n            items.toDo.push(item.item_name);\n          } else if (item.status == 'doing') {\n            items.doing.push(item.item_name);\n          } else if (item.status == 'done') {\n            items.done.push(item.item_name);\n          }\n        });\n        console.log(items);\n        return items;\n      } else {\n        return items;\n        throw new Error(response.statusText);\n      }\n    } catch (error) {\n      throw error;\n    }\n  } else {\n    return null;\n  }\n}\n_c = GetToDoItems;\nvar _c;\n$RefreshReg$(_c, \"GetToDoItems\");","map":{"version":3,"names":["GetToDoItems","userId","listname","localApiURL","apiURL","items","toDo","doing","done","response","fetch","method","headers","ok","data","json","console","log","forEach","item","status","push","item_name","Error","statusText","error","_c","$RefreshReg$"],"sources":["D:/Canada/Algonquin/Projects/react-app/LiveWebsite/ToDoApp/Github/react-todo-app/src/JS/GetToDoItems.js"],"sourcesContent":["export async function GetToDoItems(userId, listname) {\r\n    const localApiURL = \"http://localhost:8080\";\r\n    const apiURL = \"https://national-united-gobbler.ngrok-free.app\";\r\n\r\n    if (listname) {\r\n        try {\r\n            let items = {\r\n                toDo: [],\r\n                doing: [],\r\n                done: []\r\n            };\r\n\r\n            const response = await fetch(`${apiURL}/todoitem/${userId}/${listname}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'ngrok-skip-browser-warning': 'true'\r\n                }\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json(); \r\n                console.log(data);\r\n                data.forEach( item => {\r\n                    if (item.status == 'todo') {\r\n                        items.toDo.push(item.item_name);\r\n                    } else if (item.status == 'doing') {\r\n                        items.doing.push(item.item_name);\r\n                    } else if (item.status == 'done') {\r\n                        items.done.push(item.item_name);\r\n                    }\r\n                });\r\n \r\n                console.log(items)\r\n                return items; \r\n                \r\n            } else {\r\n                return items; \r\n                throw new Error(response.statusText); \r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    } else {\r\n        return null;\r\n    }\r\n   \r\n}\r\n\r\n"],"mappings":"AAAA,OAAO,eAAeA,YAAYA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACjD,MAAMC,WAAW,GAAG,uBAAuB;EAC3C,MAAMC,MAAM,GAAG,gDAAgD;EAE/D,IAAIF,QAAQ,EAAE;IACV,IAAI;MACA,IAAIG,KAAK,GAAG;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACV,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,MAAO,aAAYH,MAAO,IAAGC,QAAS,EAAC,EAAE;QACrES,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,4BAA4B,EAAE;QAClC;MACJ,CAAC,CAAC;MAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBA,IAAI,CAACI,OAAO,CAAEC,IAAI,IAAI;UAClB,IAAIA,IAAI,CAACC,MAAM,IAAI,MAAM,EAAE;YACvBf,KAAK,CAACC,IAAI,CAACe,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC;UACnC,CAAC,MAAM,IAAIH,IAAI,CAACC,MAAM,IAAI,OAAO,EAAE;YAC/Bf,KAAK,CAACE,KAAK,CAACc,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC;UACpC,CAAC,MAAM,IAAIH,IAAI,CAACC,MAAM,IAAI,MAAM,EAAE;YAC9Bf,KAAK,CAACG,IAAI,CAACa,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC;UACnC;QACJ,CAAC,CAAC;QAEFN,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;QAClB,OAAOA,KAAK;MAEhB,CAAC,MAAM;QACH,OAAOA,KAAK;QACZ,MAAM,IAAIkB,KAAK,CAACd,QAAQ,CAACe,UAAU,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AAEJ;AAACC,EAAA,GA9CqB1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}