{"ast":null,"code":"import _regeneratorRuntime from\"D:/Canada/Algonquin/Projects/react-app/LiveWebsite/ToDoApp/react-todo-app-github/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Canada/Algonquin/Projects/react-app/LiveWebsite/ToDoApp/react-todo-app-github/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";export function GetToDoItems(_x,_x2){return _GetToDoItems.apply(this,arguments);}function _GetToDoItems(){_GetToDoItems=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(userId,listname){var localApiURL,apiURL,items,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:localApiURL=\"http://localhost:8080\";apiURL=\"https://national-united-gobbler.ngrok-free.app\";if(!listname){_context.next=27;break;}_context.prev=3;items={toDo:[],doing:[],done:[]};_context.next=7;return fetch(\"\".concat(apiURL,\"/todoitem/\").concat(userId,\"/\").concat(listname),{method:\"GET\",headers:{'ngrok-skip-browser-warning':'true'}});case 7:response=_context.sent;if(!response.ok){_context.next=18;break;}_context.next=11;return response.json();case 11:data=_context.sent;console.log(data);data.forEach(function(item){if(item.status=='todo'){items.toDo.push(item.item_name);}else if(item.status=='doing'){items.doing.push(item.item_name);}else if(item.status=='done'){items.done.push(item.item_name);}});console.log(items);return _context.abrupt(\"return\",items);case 18:return _context.abrupt(\"return\",items);case 20:_context.next=25;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](3);throw _context.t0;case 25:_context.next=28;break;case 27:return _context.abrupt(\"return\",null);case 28:case\"end\":return _context.stop();}},_callee,null,[[3,22]]);}));return _GetToDoItems.apply(this,arguments);}","map":{"version":3,"names":["GetToDoItems","_x","_x2","_GetToDoItems","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","listname","localApiURL","apiURL","items","response","data","wrap","_callee$","_context","prev","next","toDo","doing","done","fetch","concat","method","headers","sent","ok","json","console","log","forEach","item","status","push","item_name","abrupt","t0","stop"],"sources":["D:/Canada/Algonquin/Projects/react-app/LiveWebsite/ToDoApp/react-todo-app-github/react-todo-app/src/JS/GetToDoItems.js"],"sourcesContent":["export async function GetToDoItems(userId, listname) {\r\n    const localApiURL = \"http://localhost:8080\";\r\n    const apiURL = \"https://national-united-gobbler.ngrok-free.app\";\r\n\r\n    if (listname) {\r\n        try {\r\n            let items = {\r\n                toDo: [],\r\n                doing: [],\r\n                done: []\r\n            };\r\n\r\n            const response = await fetch(`${apiURL}/todoitem/${userId}/${listname}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'ngrok-skip-browser-warning': 'true'\r\n                }\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json(); \r\n                console.log(data);\r\n                data.forEach( item => {\r\n                    if (item.status == 'todo') {\r\n                        items.toDo.push(item.item_name);\r\n                    } else if (item.status == 'doing') {\r\n                        items.doing.push(item.item_name);\r\n                    } else if (item.status == 'done') {\r\n                        items.done.push(item.item_name);\r\n                    }\r\n                });\r\n \r\n                console.log(items)\r\n                return items; \r\n                \r\n            } else {\r\n                return items; \r\n                throw new Error(response.statusText); \r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    } else {\r\n        return null;\r\n    }\r\n   \r\n}\r\n\r\n"],"mappings":"0XAAA,eAAsB,CAAAA,YAAYA,CAAAC,EAAA,CAAAC,GAAA,SAAAC,aAAA,CAAAC,KAAA,MAAAC,SAAA,GA8CjC,SAAAF,cAAA,EAAAA,aAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CA9CM,SAAAC,QAA4BC,MAAM,CAAEC,QAAQ,MAAAC,WAAA,CAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAC,IAAA,QAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACzCT,WAAW,CAAG,uBAAuB,CACrCC,MAAM,CAAG,gDAAgD,KAE3DF,QAAQ,EAAAQ,QAAA,CAAAE,IAAA,WAAAF,QAAA,CAAAC,IAAA,GAEAN,KAAK,CAAG,CACRQ,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,EACV,CAAC,CAAAL,QAAA,CAAAE,IAAA,SAEsB,CAAAI,KAAK,IAAAC,MAAA,CAAIb,MAAM,eAAAa,MAAA,CAAahB,MAAM,MAAAgB,MAAA,CAAIf,QAAQ,EAAI,CACrEgB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,4BAA4B,CAAE,MAClC,CACJ,CAAC,CAAC,QALIb,QAAQ,CAAAI,QAAA,CAAAU,IAAA,KAOVd,QAAQ,CAACe,EAAE,EAAAX,QAAA,CAAAE,IAAA,WAAAF,QAAA,CAAAE,IAAA,UACQ,CAAAN,QAAQ,CAACgB,IAAI,CAAC,CAAC,SAA5Bf,IAAI,CAAAG,QAAA,CAAAU,IAAA,CACVG,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC,CACjBA,IAAI,CAACkB,OAAO,CAAE,SAAAC,IAAI,CAAI,CAClB,GAAIA,IAAI,CAACC,MAAM,EAAI,MAAM,CAAE,CACvBtB,KAAK,CAACQ,IAAI,CAACe,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC,CACnC,CAAC,IAAM,IAAIH,IAAI,CAACC,MAAM,EAAI,OAAO,CAAE,CAC/BtB,KAAK,CAACS,KAAK,CAACc,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC,CACpC,CAAC,IAAM,IAAIH,IAAI,CAACC,MAAM,EAAI,MAAM,CAAE,CAC9BtB,KAAK,CAACU,IAAI,CAACa,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC,CACnC,CACJ,CAAC,CAAC,CAEFN,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC,QAAAK,QAAA,CAAAoB,MAAA,UACXzB,KAAK,iBAAAK,QAAA,CAAAoB,MAAA,UAGLzB,KAAK,UAAAK,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAqB,EAAA,CAAArB,QAAA,mBAAAA,QAAA,CAAAqB,EAAA,SAAArB,QAAA,CAAAE,IAAA,yBAAAF,QAAA,CAAAoB,MAAA,UAOb,IAAI,2BAAApB,QAAA,CAAAsB,IAAA,MAAAhC,OAAA,iBAGlB,UAAAN,aAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}